name: Build and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REPOSITORY: ${{ secrets.GAR_REPOSITORY }}
  SERVICE: ${{ secrets.GCP_SERVICE }}
  REGION: ${{ secrets.GCP_REGION }}

defaults:
 run:
  working-directory: ./app

jobs:
  deploy:
    
    name: Test, build and deploy
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Make envfile
      uses: SpicyPizza/create-envfile@v1.3
 
      with:
        directory: app
        envkey_MONGO_APP_ID: ${{ secrets.MONGO_APP_ID }}
        envkey_MONGO_DATA_API_KEY: ${{ secrets.MONGO_DATA_API_KEY }}
        envkey_MONGO_URI: ${{ secrets.MONGO_URI }} 
        envkey_MONGO_DATA_SOURCE: ${{ secrets.MONGO_DATA_SOURCE }} 
        envkey_MONGO_DATABASE: ${{ secrets.MONGO_DATABASE }} 
        envkey_MONGO_SHEETS_COLLECTION: ${{ secrets.MONGO_SHEETS_COLLECTION }} 

    - name: Setup deno
      uses: denoland/setup-deno@v1
      with:
        deno-version: v1.32.1

    - name: Run tests
      run: deno test --allow-read

    - name: Google Auth
      id: auth
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_CREDENTIALS }}'

    - name: Login to GAR
      uses: docker/login-action@v2.1.0
      with:
        registry: ${{env.REGION}}-docker.pkg.dev
        username: _json_key
        password: ${{secrets.GCP_CREDENTIALS}}

    - name: Build and Push Container
      run: |-
        docker build -t "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}" ./
        docker push "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.SERVICE }}:${{ github.sha }}"

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        region: ${{env.REGION}}
        image: ${{env.REGION}}-docker.pkg.dev/${{env.PROJECT_ID}}/${{env.REPOSITORY}}/${{env.SERVICE}}:${{ github.sha }}

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}